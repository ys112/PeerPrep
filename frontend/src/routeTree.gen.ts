/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedQuestionsImport } from './routes/_authenticated/questions'
import { Route as AuthenticatedMatchingImport } from './routes/_authenticated/matching'
import { Route as AuthenticatedCollaborationRoomIdImport } from './routes/_authenticated/collaboration.$roomId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedQuestionsRoute = AuthenticatedQuestionsImport.update({
  path: '/questions',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedMatchingRoute = AuthenticatedMatchingImport.update({
  path: '/matching',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedCollaborationRoomIdRoute =
  AuthenticatedCollaborationRoomIdImport.update({
    path: '/collaboration/$roomId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/matching': {
      id: '/_authenticated/matching'
      path: '/matching'
      fullPath: '/matching'
      preLoaderRoute: typeof AuthenticatedMatchingImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/questions': {
      id: '/_authenticated/questions'
      path: '/questions'
      fullPath: '/questions'
      preLoaderRoute: typeof AuthenticatedQuestionsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/collaboration/$roomId': {
      id: '/_authenticated/collaboration/$roomId'
      path: '/collaboration/$roomId'
      fullPath: '/collaboration/$roomId'
      preLoaderRoute: typeof AuthenticatedCollaborationRoomIdImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedMatchingRoute: typeof AuthenticatedMatchingRoute
  AuthenticatedQuestionsRoute: typeof AuthenticatedQuestionsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedCollaborationRoomIdRoute: typeof AuthenticatedCollaborationRoomIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedMatchingRoute: AuthenticatedMatchingRoute,
  AuthenticatedQuestionsRoute: AuthenticatedQuestionsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedCollaborationRoomIdRoute: AuthenticatedCollaborationRoomIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/matching': typeof AuthenticatedMatchingRoute
  '/questions': typeof AuthenticatedQuestionsRoute
  '/': typeof AuthenticatedIndexRoute
  '/collaboration/$roomId': typeof AuthenticatedCollaborationRoomIdRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/matching': typeof AuthenticatedMatchingRoute
  '/questions': typeof AuthenticatedQuestionsRoute
  '/': typeof AuthenticatedIndexRoute
  '/collaboration/$roomId': typeof AuthenticatedCollaborationRoomIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/_authenticated/matching': typeof AuthenticatedMatchingRoute
  '/_authenticated/questions': typeof AuthenticatedQuestionsRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/collaboration/$roomId': typeof AuthenticatedCollaborationRoomIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/signup'
    | '/matching'
    | '/questions'
    | '/'
    | '/collaboration/$roomId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/signup'
    | '/matching'
    | '/questions'
    | '/'
    | '/collaboration/$roomId'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/signup'
    | '/_authenticated/matching'
    | '/_authenticated/questions'
    | '/_authenticated/'
    | '/_authenticated/collaboration/$roomId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login",
        "/signup"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/matching",
        "/_authenticated/questions",
        "/_authenticated/",
        "/_authenticated/collaboration/$roomId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_authenticated/matching": {
      "filePath": "_authenticated/matching.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/questions": {
      "filePath": "_authenticated/questions.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/collaboration/$roomId": {
      "filePath": "_authenticated/collaboration.$roomId.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
